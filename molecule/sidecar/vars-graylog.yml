graylog_install_elasticsearch: False
graylog_install_mongodb:       True
graylog_install_nginx:         False
graylog_install_java:          True

es_version: "{{ graylog_elasticsearch_version }}"
es_enable_xpack: False
es_instance_name: "{{ graylog_elasticsearch_cluster_name }}"
es_heap_size: "{{ graylog_elasticsearch_heap_size_min }}"
es_scripts: False
es_templates: False
es_version_lock: False
es_config:
  node.name: "{{ graylog_elasticsearch_cluster_name }}"
  cluster.name: "{{ graylog_elasticsearch_cluster_name }}"
  http.port: 9200
  transport.tcp.port: 9300
  network.host: "127.0.0.1"

graylog_password_secret: "2jueVqZpwLLjaWxV" # generate with: pwgen -s 96 1
graylog_root_username:  "admin"
graylog_root_password: "password"
graylog_http_bind_address: "127.0.0.1:9000"
graylog_http_publish_uri: "http://testgraylog.test:10080/" # Here we set this to the internal network
# address for docker (so sidecar can push to graylog)
graylog_http_external_uri: "http://testgraylog.test:10080/" # That's our external address on the host

#
# NginX
#
# See https://docs.graylog.org/en/3.2/pages/configuration/web_interface.html
# Here the config is a bit more complex as we need:
# The internal network to be able to connect to 10080 testgraylog.test <-> testsidecar.test
# The external network is also able to access the testgraylog.test server for local testing purpose

nginx_vhosts:
  - listen: "10080"
    server_name: "testgraylog.test"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "graylog.conf"
    extra_parameters: |
     location / {
        proxy_http_version  1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Graylog-Server-URL {{ graylog_http_external_uri }};
        proxy_pass       http://{{ graylog_http_bind_address }};
     }

nginx_remove_default_vhost: True

